{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Website\\\\src\\\\contexts\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const useTheme = () => {\n  _s();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [theme, setTheme] = useState('system');\n  const [actualTheme, setActualTheme] = useState('light');\n\n  // Get system theme preference\n  const getSystemTheme = () => {\n    if (typeof window !== 'undefined' && window.matchMedia) {\n      return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n    }\n    return 'light';\n  };\n\n  // Load theme from localStorage on mount\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('theme') || 'system';\n    setTheme(savedTheme);\n  }, []);\n\n  // Update actual theme based on theme setting\n  useEffect(() => {\n    let newActualTheme;\n    if (theme === 'system') {\n      newActualTheme = getSystemTheme();\n    } else {\n      newActualTheme = theme;\n    }\n    setActualTheme(newActualTheme);\n\n    // Apply theme to document\n    document.documentElement.setAttribute('data-theme', newActualTheme);\n    document.documentElement.className = newActualTheme;\n\n    // Save to localStorage\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n\n  // Listen for system theme changes\n  useEffect(() => {\n    if (theme === 'system') {\n      const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n      const handleChange = e => {\n        const newSystemTheme = e.matches ? 'dark' : 'light';\n        setActualTheme(newSystemTheme);\n        document.documentElement.setAttribute('data-theme', newSystemTheme);\n        document.documentElement.className = newSystemTheme;\n      };\n      mediaQuery.addEventListener('change', handleChange);\n      return () => mediaQuery.removeEventListener('change', handleChange);\n    }\n  }, [theme]);\n  const changeTheme = newTheme => {\n    setTheme(newTheme);\n  };\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      changeTheme('dark');\n    } else if (theme === 'dark') {\n      changeTheme('system');\n    } else {\n      changeTheme('light');\n    }\n  };\n  const value = {\n    theme,\n    actualTheme,\n    changeTheme,\n    toggleTheme,\n    themes: ['light', 'dark', 'system']\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"gasmh4p6RRkF7cIqWYF9/X0eNgI=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","context","Error","ThemeProvider","children","_s2","theme","setTheme","actualTheme","setActualTheme","getSystemTheme","window","matchMedia","matches","savedTheme","localStorage","getItem","newActualTheme","document","documentElement","setAttribute","className","setItem","mediaQuery","handleChange","e","newSystemTheme","addEventListener","removeEventListener","changeTheme","newTheme","toggleTheme","value","themes","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Code/Website/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst ThemeContext = createContext();\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\nexport const ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState('system');\n  const [actualTheme, setActualTheme] = useState('light');\n\n  // Get system theme preference\n  const getSystemTheme = () => {\n    if (typeof window !== 'undefined' && window.matchMedia) {\n      return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n    }\n    return 'light';\n  };\n\n  // Load theme from localStorage on mount\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('theme') || 'system';\n    setTheme(savedTheme);\n  }, []);\n\n  // Update actual theme based on theme setting\n  useEffect(() => {\n    let newActualTheme;\n    \n    if (theme === 'system') {\n      newActualTheme = getSystemTheme();\n    } else {\n      newActualTheme = theme;\n    }\n    \n    setActualTheme(newActualTheme);\n    \n    // Apply theme to document\n    document.documentElement.setAttribute('data-theme', newActualTheme);\n    document.documentElement.className = newActualTheme;\n    \n    // Save to localStorage\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n\n  // Listen for system theme changes\n  useEffect(() => {\n    if (theme === 'system') {\n      const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n      \n      const handleChange = (e) => {\n        const newSystemTheme = e.matches ? 'dark' : 'light';\n        setActualTheme(newSystemTheme);\n        document.documentElement.setAttribute('data-theme', newSystemTheme);\n        document.documentElement.className = newSystemTheme;\n      };\n\n      mediaQuery.addEventListener('change', handleChange);\n      \n      return () => mediaQuery.removeEventListener('change', handleChange);\n    }\n  }, [theme]);\n\n  const changeTheme = (newTheme) => {\n    setTheme(newTheme);\n  };\n\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      changeTheme('dark');\n    } else if (theme === 'dark') {\n      changeTheme('system');\n    } else {\n      changeTheme('light');\n    }\n  };\n\n  const value = {\n    theme,\n    actualTheme,\n    changeTheme,\n    toggleTheme,\n    themes: ['light', 'dark', 'system']\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGR,UAAU,CAACK,YAAY,CAAC;EACxC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,QAAQ;AAQrB,OAAO,MAAMI,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,QAAQ,CAAC;EAC5C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,OAAO,CAAC;;EAEvD;EACA,MAAMgB,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,OAAOC,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACC,UAAU,EAAE;MACtD,OAAOD,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO,GAAG,MAAM,GAAG,OAAO;IACrF;IACA,OAAO,OAAO;EAChB,CAAC;;EAED;EACAlB,SAAS,CAAC,MAAM;IACd,MAAMmB,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,QAAQ;IAC5DT,QAAQ,CAACO,UAAU,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAnB,SAAS,CAAC,MAAM;IACd,IAAIsB,cAAc;IAElB,IAAIX,KAAK,KAAK,QAAQ,EAAE;MACtBW,cAAc,GAAGP,cAAc,CAAC,CAAC;IACnC,CAAC,MAAM;MACLO,cAAc,GAAGX,KAAK;IACxB;IAEAG,cAAc,CAACQ,cAAc,CAAC;;IAE9B;IACAC,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAEH,cAAc,CAAC;IACnEC,QAAQ,CAACC,eAAe,CAACE,SAAS,GAAGJ,cAAc;;IAEnD;IACAF,YAAY,CAACO,OAAO,CAAC,OAAO,EAAEhB,KAAK,CAAC;EACtC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAEX;EACAX,SAAS,CAAC,MAAM;IACd,IAAIW,KAAK,KAAK,QAAQ,EAAE;MACtB,MAAMiB,UAAU,GAAGZ,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC;MAEpE,MAAMY,YAAY,GAAIC,CAAC,IAAK;QAC1B,MAAMC,cAAc,GAAGD,CAAC,CAACZ,OAAO,GAAG,MAAM,GAAG,OAAO;QACnDJ,cAAc,CAACiB,cAAc,CAAC;QAC9BR,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAEM,cAAc,CAAC;QACnER,QAAQ,CAACC,eAAe,CAACE,SAAS,GAAGK,cAAc;MACrD,CAAC;MAEDH,UAAU,CAACI,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;MAEnD,OAAO,MAAMD,UAAU,CAACK,mBAAmB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;IACrE;EACF,CAAC,EAAE,CAAClB,KAAK,CAAC,CAAC;EAEX,MAAMuB,WAAW,GAAIC,QAAQ,IAAK;IAChCvB,QAAQ,CAACuB,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIzB,KAAK,KAAK,OAAO,EAAE;MACrBuB,WAAW,CAAC,MAAM,CAAC;IACrB,CAAC,MAAM,IAAIvB,KAAK,KAAK,MAAM,EAAE;MAC3BuB,WAAW,CAAC,QAAQ,CAAC;IACvB,CAAC,MAAM;MACLA,WAAW,CAAC,OAAO,CAAC;IACtB;EACF,CAAC;EAED,MAAMG,KAAK,GAAG;IACZ1B,KAAK;IACLE,WAAW;IACXqB,WAAW;IACXE,WAAW;IACXE,MAAM,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ;EACpC,CAAC;EAED,oBACEpC,OAAA,CAACC,YAAY,CAACoC,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAA5B,QAAA,EACjCA;EAAQ;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACjC,GAAA,CAnFWF,aAAa;AAAAoC,EAAA,GAAbpC,aAAa;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}