{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Website\\\\src\\\\components\\\\ThemeToggle.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useTheme } from '../contexts/ThemeContext';\nimport './ThemeToggle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeToggle = () => {\n  _s();\n  const {\n    theme,\n    changeTheme,\n    themes\n  } = useTheme();\n  const [isOpen, setIsOpen] = useState(false);\n  const themeIcons = {\n    light: '☀️',\n    dark: '🌙',\n    system: '💻'\n  };\n  const themeLabels = {\n    light: 'Light',\n    dark: 'Dark',\n    system: 'System'\n  };\n  const handleThemeSelect = selectedTheme => {\n    changeTheme(selectedTheme);\n    setIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"theme-toggle\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"theme-toggle-button\",\n      onClick: () => setIsOpen(!isOpen),\n      \"aria-label\": \"Toggle theme\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"theme-icon\",\n        children: themeIcons[theme]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"theme-label\",\n        children: themeLabels[theme]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `dropdown-arrow ${isOpen ? 'open' : ''}`,\n        children: \"\\u25BC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theme-dropdown\",\n      children: themes.map(themeOption => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `theme-option ${theme === themeOption ? 'active' : ''}`,\n        onClick: () => handleThemeSelect(themeOption),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"theme-option-icon\",\n          children: themeIcons[themeOption]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"theme-option-label\",\n          children: themeLabels[themeOption]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), theme === themeOption && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"checkmark\",\n          children: \"\\u2713\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 41\n        }, this)]\n      }, themeOption, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theme-overlay\",\n      onClick: () => setIsOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeToggle, \"0rewzR6VpWY393nOSwqxMp3agxU=\", false, function () {\n  return [useTheme];\n});\n_c = ThemeToggle;\nexport default ThemeToggle;\nvar _c;\n$RefreshReg$(_c, \"ThemeToggle\");","map":{"version":3,"names":["React","useState","useTheme","jsxDEV","_jsxDEV","ThemeToggle","_s","theme","changeTheme","themes","isOpen","setIsOpen","themeIcons","light","dark","system","themeLabels","handleThemeSelect","selectedTheme","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","themeOption","_c","$RefreshReg$"],"sources":["C:/Code/Website/src/components/ThemeToggle.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useTheme } from '../contexts/ThemeContext';\nimport './ThemeToggle.css';\n\nconst ThemeToggle = () => {\n  const { theme, changeTheme, themes } = useTheme();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const themeIcons = {\n    light: '☀️',\n    dark: '🌙',\n    system: '💻'\n  };\n\n  const themeLabels = {\n    light: 'Light',\n    dark: 'Dark',\n    system: 'System'\n  };\n\n  const handleThemeSelect = (selectedTheme) => {\n    changeTheme(selectedTheme);\n    setIsOpen(false);\n  };\n\n  return (\n    <div className=\"theme-toggle\">\n      <button\n        className=\"theme-toggle-button\"\n        onClick={() => setIsOpen(!isOpen)}\n        aria-label=\"Toggle theme\"\n      >\n        <span className=\"theme-icon\">{themeIcons[theme]}</span>\n        <span className=\"theme-label\">{themeLabels[theme]}</span>\n        <span className={`dropdown-arrow ${isOpen ? 'open' : ''}`}>▼</span>\n      </button>\n\n      {isOpen && (\n        <div className=\"theme-dropdown\">\n          {themes.map((themeOption) => (\n            <button\n              key={themeOption}\n              className={`theme-option ${theme === themeOption ? 'active' : ''}`}\n              onClick={() => handleThemeSelect(themeOption)}\n            >\n              <span className=\"theme-option-icon\">{themeIcons[themeOption]}</span>\n              <span className=\"theme-option-label\">{themeLabels[themeOption]}</span>\n              {theme === themeOption && <span className=\"checkmark\">✓</span>}\n            </button>\n          ))}\n        </div>\n      )}\n\n      {isOpen && (\n        <div \n          className=\"theme-overlay\" \n          onClick={() => setIsOpen(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ThemeToggle;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}